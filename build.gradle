apply plugin: 'java'

repositories {
    jcenter()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
    def jmhVersion = '1.19'
    testCompile group: 'org.openjdk.jmh', name: 'jmh-core', version: jmhVersion
    testCompile group: 'org.openjdk.jmh', name: 'jmh-generator-annprocess', version: jmhVersion
}

def cSourceDir = file("src/main/c")
def generatedCSourceDir = file("$buildDir/src/c")
def nativeLibsDir = file("$buildDir/$libsDirName")

task generateHeader(type: Exec) {
    outputs.dir generatedCSourceDir
    commandLine 'javah',
            '-classpath', sourceSets.main.output.classesDirs.getAsPath(),
            '-d', generatedCSourceDir,
            'li.earth.urchin.twic.Squarer'

    dependsOn classes
}

task compileC(type: Exec) {
    inputs.dir generatedCSourceDir
    inputs.dir cSourceDir

    doFirst {
        nativeLibsDir.mkdirs()
    }

    commandLine 'gcc',
            '-Wall',
            '-g',
            '-I', generatedCSourceDir,
            '-I', file(System.getProperty("java.home") + "/../include"),
            '-I', file(System.getProperty("java.home") + "/../include/linux"),
            '-o', "$nativeLibsDir/libjni-bench.so",
            '-shared',
            '-fPIC',
            "$cSourceDir/Squarer.c"

    dependsOn generateHeader
}
assemble.dependsOn compileC
test.dependsOn compileC

test {
    exclude '**/generated/**'
    systemProperty 'java.library.path', nativeLibsDir
    jvmArgs '-Xcheck:jni'
}
